generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  files      files[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model files {
  id                Int       @id @default(autoincrement())
  user_id           Int
  original_filename String    @db.VarChar(255)
  storage_path      String
  title             String?   @db.VarChar(255)
  description       String?
  status            String    @default("uploaded") @db.VarChar(50)
  extracted_data    Json?
  uploaded_at       DateTime? @default(now()) @db.Timestamp(6)
  users             users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  jobs              jobs[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model jobs {
  id            Int       @id @default(autoincrement())
  file_id       Int?
  job_type      String?   @db.VarChar(50)
  status        String    @db.VarChar(50)
  error_message String?
  started_at    DateTime? @db.Timestamp(6)
  completed_at  DateTime? @db.Timestamp(6)
  files         files?    @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
